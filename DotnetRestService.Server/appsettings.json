{
  "ConnectionStrings": {
    "DefaultConnection": "Host=localhost;Port=5432;Database=dotnet_rest_service_db;Username=postgres;Password=postgres"
  },
  "AllowedHosts": "*",
  "Database": {
    "CommandTimeout": 30,
    "EnableMigrations": true,
    "ConnectionPoolSize": 10
  },
  "Kestrel": {
    "Endpoints": {
      "Grpc": {
        "Protocols": "Http2",
        "Url": "http://0.0.0.0:5030"
      },
      "Http": {
        "Url": "http://0.0.0.0:5031",
        "Protocols": "Http1"
      }
    }
  },
  "Authentication": {
    "Jwt": {
      "SecretKey": "change-this-secret-key-in-production-use-environment-variables-for-security",
      "Issuer": "DotnetRestService",
      "Audience": "DotnetRest ServiceAPI"
    }
  },
  "Application": {
    "Environment": "Production",
    "Version": "1.0.0",
    "Name": "dotnet_rest_service"
  },
  "Serilog": {
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "DotnetRestService.Server.Services.MetricsService": "Warning",
        "System": "Error",
        "Microsoft.AspNetCore.Hosting.Diagnostics": "Warning",
        "OpenTelemetry": "Warning",
        "Grpc": "Warning",
        "Microsoft.AspNetCore": "Warning",
        "DotnetRestService.Core": "Information",
        "DotnetRestService.Persistence": "Information",
        "DotnetRestService.Server.Grpc": "Information",
        "Microsoft.Extensions.Diagnostics.HealthChecks": "Information",
        "Microsoft.EntityFrameworkCore.Database.Command": "Warning",
        "DotnetRestService.Server.HealthChecks": "Information",
        "DotnetRestService.Server.Interceptors": "Information"
      }
    },
    "Properties": {
      "Environment": "Production",
      "Version": "1.0.0",
      "Application": "dotnet-rest-service"
    },
    "Enrich": [
      "FromLogContext",
      "WithMachineName",
      "WithThreadId",
      "WithCorrelationId",
      "WithEnvironmentName",
      "WithProperty"
    ],
    "Using": ["Serilog.Sinks.Console"],
    "WriteTo": [
      {
        "Name": "Console",
        "Args": {
          "formatter": "Serilog.Formatting.Compact.CompactJsonFormatter, Serilog.Formatting.Compact"
        }
      }
    ]
  }
}